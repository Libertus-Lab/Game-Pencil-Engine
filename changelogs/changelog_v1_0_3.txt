Game Pencil Engine Changelog

Version 1.0.3[RC] Changelog

[Critical Changes]
	-Fixed bug that crashes application on right click in tile-editor with empty layers.
	-Corrected deletion of undefined variable in GPE Settings Editor deconstructor.
	-Automatic rendering is now dependent on user input.
	-IDE FPS changed to 30 FPS cycle.
	-Cache system memory bug corrected.

[General Stabilizations and Optimizations made.]
	-Tinydir library dropped from future versions due to lack of "proper unicode suppport".
	-Created two new classes to handle file browsing.
	-Improved UsserInput Class.
	-General speed improvements.
	-Changed from sprite based icons to font awesome pngs in editor.
	-IDE now pauses logic and render calls when window is being resized to address previous tester complaints.
	-render_new_number() function added to render numbers in a bitmap-font like way to reduce cache sizes.
	-Tooltips are now displayed as normal tooltips.
	-Status bar now shows Project in view file name and/or Current Function cursor Line/Column.
	
[Engine changes]
	-Html5 Export
		-Autmated Function Default Parameters[ W.I.P]
		-General speed improvements.
		-Fullscreen keys no longer disabled.
		-Added degree() and radian() functions for CCW and CW conversions  (respectively).
		-Fonts with no file attatched respects the font size entered by user instead of simply defaulting to 12pt Arial on export.
		-Added get_object_list function[W.I.P]
		-Added get_object_family function[W.I.P]
		-Added get_past_scene() function
		-Added get_past_scene_name() function
		-Updated find_collision_rectangle() function to prevent object collision with self.
		-Removed pre-rendering for tilemap due to canvas size and speed limitation
		-Corrected self_destruct call to be processed at the beginning and end of game logic.
		-Collision system slightly upgraded.
		-Obliterated continuous scene and object bug that existed due to typo.
		-Optimized scene movement related functions.
		-Debug mode now displays more logged data in console window.
		-Normal mode has limited logged data in console window.
		-Input Class now transforms asynchronous inputs into frame-based inputs to prevent double-events.
		-Both gpe.get_camera_mouse_x() and gpe.get_camera_mouse_y() now return 0th camera if parameter is out of bounds or undefined.
		-Both gpe.get_camera_mouse_x() and gpe.get_camera_mouse_y() now both return properly scaled (x,y) coordinates.
		-Added under_mouse( cameraId) to Game Objects.
		-Corrected update_cords() function for Game Objects.
		-Corrected audio_playing() and video_playing() function parameter name.
		-Added get_background() and set_background() functions.
		-Speed optimizatio made to GPR.find_collision_rectangle()
		-Added touches_object() and touches_family() functions
		-Added bounce function[W.I.P]
		-Added x-warp function[W.I.P]
		-Added y-warp function[W.I.P]
		-Added bounce function[W.I.P]
		-Added start values for background information in scene for scene_reset to be fully activation.
		-Splash Screen State simplified and made responsive
		-Loading State simplified and made responsive
		-More options now prevalent in IDE settings for smoother use on different devices.

	-Wii U Export
		-See Html5 Export changes
	-Desktop Platforms added
		-Windows 32 and 64bit prebuilt electron packages included
		-Linux[Ubuntu flavor] 32 and 64bit prebuilt electron packages included
		-Testing stages for OSX development for 64bit support.

["Pawbituous Compiler" upgrades]
-Resource name checking now applied to all resources
-Function parameter validation
-Functions are parsed for missing symbols and invalid end-line modes.
-Compiler now communicates with newly formed WIP Build Log system.

[General Editor & Gui Changes]
	-Autmated Function Default Parameters
	
	-General and Build Logs added to bottom of screen.
	-Program now comes with console window.
	-Close project Action now only asks once if user will like to close project & save.
	-Upgrade notice removed from startup of program[Free Edition Only]
	-Resources Pane highlights clicked resource
	-Resource Pane elements given seperate smaller font, height shortened and made more width/height efficient.
	-Get Yes/No/Cancel functionality upgraded with many prompts not displaying cancel button if not needed.
	-Get Yes/No/Cancel buttons given visible keyshortcuts
	-Scrolling now possible with arrow keys in selected areas
	-Timed notice moved to bottom center of the screen with alphaed box and text.
	-Alphaed text functionality restored.
	-Text now makes use of TTF_SetFontHinting().
	-Resource Pane folder seperating horizontal lines are now at 32/255 alpha value.
	-Clear Rcent Projects list now functional
	-General speed improvements.
	-Resource Drop Down menu now has actual icons of resources displayed.
	-Corrected redraw glitch for popup menus.
	-Tooltips now display under mouse cursor and not in status bar.
	-Frozen_screenshots for pop up menus as well as generated screenshots now export as smaller .pngs instead of large .bmp files.
	-Corrected window manual resizing lag[W.I.P]
	-Drop down mens for context menu trees now highlight differently for resources and plain options.
	
	File Open/Save Menu
	-Updated function to allow file type filters
	-Updated preview window if images to fall in ratio for larger images
	-Disabled preview of images larger than 4096 in width or height for the sake of render time speed.
	-Switched tinydir method to prevent empty folders from appearing on browse.
	-Added three modes for browsing files( thumbnails, multi-column and three-column modes]
	-Removed hover effect when outside of the filelist box.

	Input Field Changes
	-Corrected Paste bug where string is doubled. Now pastes correctly.
	-Added forward deleting function into text field
	-When in use, scroll control rests in input field.
	-Input bugs corrected
	
	Text Editor Changes
	-Text editor scrolling math corrected.
	-Removed selectiing of text while cursor is inside of text area's buttonbar.
	-Added Copy, Cut and Paste functionality to the buttonbar
	-Added forward deleting function into text editor.
	-Corrected cursor location for invalid areas.
	-Delete selection bounding issue corrected.
	-General improvements.
	-General theming improvements
	-Suggested code now backtraces one character is not alpha-numerica to begin search.
	-Suggested code now adds paratenthesis if function is being added.
	-Symbol background highlight alpha changed from 255/255	to 64/255.
	-Symbol highlight is now render undered selected text hightlights
	-Short message pops up now for when copy selection call is made.
	-Added new engine functions, keywords, etc into suggested  text.
	-Highlighted functions now displayed 3 key lines[ function, description and scope].
	-Javascript functions no longer are treated differently than gpe and object functions on highlights.
	-Bug corrected in synthax highlighter where found synthax was highlighted within larger words via underscore.
	-Speed optimizations made for synthax highlighters.
	-Input bugs corrected
	-Experimental Log rendering now enabled for Warnings, Bugs and Errors.
	-Keyboard shortcuts added
		-CTRL+LEFT
		-CTRL+RIGHT
		-CTRL+UP
		-CTRL+DOWN
		-CTRL+DELETE[ W.I.P]
		-CTRL+BACKSPACE[ W.I.P]
		-CTRL+HOME[ W.I.P]
		-CTRL+END[ W.I.P]

[General Editor & Compiler Settings]
-Editor & Gui Settings changes made
	-Added FPS dropdown.
	-Added Key Delay time[Reccommended to leave at 0 for fast performance]
	-Show Hidden Files in Browser added[Important for Linux users].
	-Open last project check box added.
-Compiler Tab / Section added.
	-Exit on found errors checkbox added.
	-More options to come.
-External Editors
	-Font Editor added

[Functon Editor Changes]
	-GPF file output type corrected
	-Parametersfield input box size corrected.

[Audio Editor Changes]
	-When loading empty file names, no popup alert is displayed.
	-Reworded fallback files label.

[Video Editor Changes]
	-Reworded fallback files label.

[Font Editor Changes]
	-When loading empty file names, no popup alert is displayed.

[Sprite Editor Changes]
	-When loading empty file names, no popup alert is displayed.
	-Sprite frames start at 0 instead of 1.
	-When using load button successfully the sprite editor switches the data-entry mode.

[Texture Editor Changes]
	-When loading empty file names, no popup alert is displayed.

[Tilesheet Editor Changes]
	-When loading empty file names, no popup alert is displayed.

[Object Editor Changes]
	-Custom and collision text editor's caches text on project load.
	-Icons added to many of the basic, timed and special functions.
	-Function selectors are now distinguished if function has content/code.
	
[Scene Editor Changes]
	-Fixed nasty tile editor crashing bug
	-Fixed flickering object panel on right click.
	-Fixed offset issue on tiled backgrounds
	-Scrolling now possible with arrow keys in scene areas
	-Fixed offset issue for rendering tiles
	-Fixed out of bound issue for placing and removing tiles that crashed program.
	-Corrected tile system to check for offsets for rendering, placing and removing on all layers.
	-Aded arrows to editor view.
	-Inheriting object class components is now done in ascending order.
	-Tile grid visibility is now toggable
	-Prompt on scene resize only occurs if tile layers are present in scene.
	-Removed need to hold M to place/remove objects and tiles.
	
[Project Properties/Settings Changes]
	-Marcros variables are now parsed for synthax editor on save/load
	-Platforms Menu upgraded for export/run processes
	-Extras Tab added
	-Tons of improvements
	-Scrollbar improvements